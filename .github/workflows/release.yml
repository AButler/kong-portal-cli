name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number"
        required: true
        type: string

jobs:
  version:
    name: Validate version
    runs-on: ubuntu-latest
    outputs:
      version_3: ${{ steps.version.outputs.version_3 }}
      version_suffix: ${{ steps.version.outputs.version_suffix }}
      version_full: ${{ steps.version.outputs.version_full }}
      is_prerelease: ${{ steps.version.outputs.is_prerelease }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: build

      - name: Parse version
        id: version
        run: ./build/Get-Version.ps1 -Version ${{ inputs.version }}
        shell: pwsh

  build:
    name: Build & Test
    uses: ./.github/workflows/build-test.yml
    permissions:
      id-token: write
      contents: read
      checks: write

  publish:
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - version
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish (win-x64)
        run: |
          dotnet publish -r win-x64 \
            -o ../../publish/win-x64 \
            -p:PublishSingleFile=true \
            -p:SelfContained=true \
            -p:VersionPrefix="${{ needs.version.outputs.version_3 }}" \
            --version-suffix "${{ needs.version.outputs.version_suffix }}"
        working-directory: src/CLI

      - name: Publish (linux-x64)
        run: |
          dotnet publish -r linux-x64 \
            -o ../../publish/linux-x64 \
            -p:PublishSingleFile=true \
            -p:SelfContained=true \
            -p:VersionPrefix="${{ needs.version.outputs.version_3 }}" \
            --version-suffix "${{ needs.version.outputs.version_suffix }}"
        working-directory: src/CLI

      - name: Publish (linux-arm64)
        run: |
          dotnet publish -r linux-arm64 \
            -o ../../publish/linux-arm64 \
            -p:PublishSingleFile=true \
            -p:SelfContained=true \
            -p:VersionPrefix="${{ needs.version.outputs.version_3 }}" \
            --version-suffix "${{ needs.version.outputs.version_suffix }}"
        working-directory: src/CLI

      - name: Publish (linux-musl-x64)
        run: |
          dotnet publish -r linux-musl-x64 \
            -o ../../publish/linux-musl-x64 \
            -p:PublishSingleFile=true \
            -p:SelfContained=true \
            -p:VersionPrefix="${{ needs.version.outputs.version_3 }}" \
            --version-suffix "${{ needs.version.outputs.version_suffix }}"
        working-directory: src/CLI

      - name: Prepare release
        run: ./build/Prepare-Release.ps1
        shell: pwsh

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.version.outputs.version_full }}
          draft: true
          generateReleaseNotes: true
          artifacts: "dist/*"
          allowUpdates: true
          updateOnlyUnreleased: true
          prerelease: ${{ needs.version.outputs.is_prerelease }}
